AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Environment:
      Variables:
        DYNAMO_DB_TABLE_ARN: !Ref NOSQLObjectStorage
    CodeUri: ./src
    Runtime: python3.8

Resources: 

  CreateObjectMethod:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        PostEvent:
          Type: HttpApi
          Properties:
            Method: post
            Path: /api/objects
      Handler: create_object.handler
      # Only creates objects, should not be allowed to update existing objects
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:PutItem
              Resource: !GetAtt NOSQLObjectStorage.Arn

  CreateObjectMethodLogs:
    Type: AWS::Logs::LogGroup
    DependsOn: [ CreateObjectMethod ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateObjectMethod}
      RetentionInDays: 7

  PutObjectMethod:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        PostEvent:
          Type: HttpApi
          Properties:
            Method: put
            Path: /api/objects/{object_uid}
      Handler: update_object.handler
      # Only updates objects, 404 if object is not found
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:UpdateItem
              Resource: !GetAtt NOSQLObjectStorage.Arn

  PutObjectMethodLogs:
    Type: AWS::Logs::LogGroup
    DependsOn: [ PutObjectMethod ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${PutObjectMethod}
      RetentionInDays: 7

  # Handles a single object
  GetObjectMethod:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        PostEvent:
          Type: HttpApi
          Properties:
            Method: get
            Path: /api/objects/{object_uid}
      Handler: get_object.handle_single
      # Only gets objects, 404 if object is not found
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:GetItem
              Resource: !GetAtt NOSQLObjectStorage.Arn

  GetObjectMethodLogs:
    Type: AWS::Logs::LogGroup
    DependsOn: [ GetObjectMethod ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${GetObjectMethod}
      RetentionInDays: 7

  # Handles multiple objects
  GetObjectsMethod:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        PostEvent:
          Type: HttpApi
          Properties:
            Method: get
            Path: /api/objects
      Handler: get_object.handle_multiple
      # Only gets objects, 404 if object is not found
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
              Resource: !GetAtt NOSQLObjectStorage.Arn

  GetObjectsMethodLogs:
    Type: AWS::Logs::LogGroup
    DependsOn: [ GetObjectsMethod ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${GetObjectsMethod}
      RetentionInDays: 7

  DeleteObjectMethod:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        PostEvent:
          Type: HttpApi
          Properties:
            Method: delete
            Path: /api/objects/{object_uid}
      Handler: delete_object.handler
      # Only deletes objects, 404 if object is not found
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: 
                - dynamodb:DeleteItem
              Resource: !GetAtt NOSQLObjectStorage.Arn

  DeleteObjectMethodLogs:
    Type: AWS::Logs::LogGroup
    DependsOn: [ DeleteObjectMethod ]
    Properties:
      LogGroupName: !Sub /aws/lambda/${DeleteObjectMethod}
      RetentionInDays: 7

  NOSQLObjectStorage:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: uid
        Type: String